syntax = "proto3";

package nsethprotobuf;

service NodeCommunications {
    rpc GetServiceVersion (Empty) returns (ServiceVersion){
    }

    rpc GetFeeRateEstimation (Address) returns (FeeRateEstimation){
    }

    rpc GetAddressInfo (Address) returns (AddressInfo){
    }

    rpc ResyncAddress (Address) returns (ReplyInfo){
    }

    rpc CheckRejectTxs (TxsToCheck) returns (RejectedTxs){
    }

    rpc GetTransaction(TransactionHash) returns (ETHTransaction){
    }

    rpc SyncState (BlockHeight) returns (ReplyInfo){
    }


    // TODO: remove
    rpc EventInitialAdd (UsersData) returns (ReplyInfo){
    }
}

message TransactionHash {
    string Hash = 1;
}

message AddressInfo {
    string Balance = 1;
    string PendingBalance = 2;
    uint64 Nonce = 3;
}

message FeeRateEstimation {
    uint64 VerySlow = 1;
    uint64 Slow = 2;
    uint64 Medium = 3;
    uint64 Fast = 4;
    uint64 VeryFast = 5;
    bool isContract =6;
}


message BlockHeight{
    int64 height = 1;
}

message ETHTransaction {
    string Hash = 1;
    string From = 2;
    string To = 3;
    string Amount = 4;
    string Payload = 5;
    uint64 GasPrice = 6;
    uint64 GasLimit = 7;
    uint64 Nonce = 8;
    int64 BlockTime = 9;
    int64 TxpoolTime = 10;
    int64 BlockHeight = 11;
    bool Resync = 12;
    SmartContractInfo ContractInfo = 13;
}

message SmartContractInfo {
    int32 Status = 1;
    SmartContractCall Method = 2;
    repeated SmartContractCall Events = 3;
    string DeployedAddress = 4;
}

message SmartContractCall {
    Address Address = 1;
    string Name = 2;
    repeated bytes Arguments = 3;
}

message Address {
    string address = 1;
}

message ReplyInfo {
    string message = 1;
}

message ServiceVersion {
    string branch = 1;    
    string commit = 2;  
    string buildtime = 3; 
    string lasttag = 4;    
}


 
// ???
message RejectedTxs  {
    repeated string RejectedTxs  = 1;
}

message TxsToCheck  {
    repeated string Hash  = 1;
}

message Empty {
}

message UsersData {
    repeated Address addresses = 1;
}
